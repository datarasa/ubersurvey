<?php
// $id$

/**
 * @file
 * This module provides blocks implementation.
 */

/**
 * Implements hook_block_info().
 */
function ubersurvey_blocks_block_info() {
  $blocks = array();

  $blocks['ubersurvey_user_dropdown'] = array(
    'info' => t('Uber survey user drop down menu block'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['ubersurvey_user_dashboard_blocks'] = array(
    'info' => t('Uber survey user dashboard blocks'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['ubersurvey_active_survey_block'] = array(
    'info' => t('Uber survey user active survey alerts block'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['ubersurvey_user_submissions'] = array(
    'info' => t('Uber survey list user submisson list'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function ubersurvey_blocks_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'ubersurvey_user_dropdown':
      $block = array(
        'subject' => t('Uber survey site wide drop down menu block'),
        'content' => ubersurvey_blocks_block_content('ubersurvey_user_dropdown'),
      );
      break;
    case 'ubersurvey_user_dashboard_blocks':
      $block = array(
        'subject' => t('Uber survey user dashboard blocks'),
        'content' => ubersurvey_blocks_block_content('ubersurvey_user_dashboard_blocks'),
      );
      break;
    case 'ubersurvey_active_survey_block':
      $block = array(
        'subject' => t('Uber survey user active survey alerts block'),
        'content' => ubersurvey_blocks_block_content('ubersurvey_active_survey_block'),
      );
      break;
    case 'ubersurvey_user_submissions':
      $block = array(
        'subject' => t('Uber survey list user submisson list'),
        'content' => ubersurvey_blocks_block_content('ubersurvey_user_submissions'),
      );
      break;
  }
  return $block;
}

function ubersurvey_blocks_block_content($blockname) {
  $output = '';
  switch ($blockname) {
    case 'ubersurvey_user_dropdown':
      global $user;
      $image = theme('user_picture', array('account' => $user));
      $img = '';
      if(isset($user->picture->uri)){
	    $user_pic = $user->picture->uri;	
      }else{
		$user_pic = "public://pictures/user-default.png";  
      }
	  $img = theme('image_style',array('style_name' => 'top_right_user_prof_pic', 'path' => $user_pic));	
      $output.='<div role="navigation" class="navbar-header  navbar pull-right custom-user-settings">
  <ul class="nav navbar-nav navbar-right">
    <li class="dropdown navbar-user">
	  <a class="dropdown-toggle" href="#" data-toggle="dropdown" data-hover="dropdown">
        <span class="user-info">'.$user->name.'</span>
        <div class="user-photo">';
		    $output.=$img; 
        $output.='</div>
      </a>
     <ul class="dropdown-menu animated fadeInLeft">
       <li class="arrow">
	    <a href="/user">
	      My Profile
	    </a>
	   </li>
       <li class="arrow">
	    <a href="/user/'.$user->uid.'/edit">
	      Edit Profile
	    </a>
	   </li>
       <li class="arrow">
	     <a href="/user/logout">
	       Logout
	     </a>
	   </li>
	 </ul>
   </li>
  </ul>
</div>';
      break;
    case 'ubersurvey_user_dashboard_blocks':
	  $output.='<div class="row">
  <div class="guidnc_blck col-sm-12 col-xs-12">
    <div class="box box-color box-bordered">
      <div class="box-title">
        <h3>How it works</h3>
      </div>
      <div class="box-content">
          <div class="embd_srvy col-md-4 col-sm-12 col-xs-12"> <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
            <h3>Embed your survey on your blog or website</h3>
          </div>
          <div class="snd_srvy col-md-4 col-sm-12 col-xs-12"> <span class="glyphicon glyphicon-envelope" aria-hidden="true"></span>
            <h3>Send survey</h3>
          </div>
          <div class="anlz_rslt col-md-4 col-sm-12 col-xs-12"> <span class="glyphicon glyphicon-stats" aria-hidden="true"></span>
            <h3>Analyze results</h3>
          </div>
      </div>
    </div>
    </div>
    <div class="crt_srvy_blck col-sm-6 col-xs-12">
      <div class="box box-color box-bordered">
        <div class="box-title">
          <h3>Create Survey</h3>
        </div>
        <div class="box-content"><a href="create-survey?destination=my-surveys-list"> <span aria-hidden="true" class="glyphicon glyphicon-plus-sign"></span><br> Create survey</a> </div>
      </div>
    </div>
    <div class="stats_blck col-sm-6 col-xs-12">
      <div class="box box-color box-bordered">
        <div class="box-title">
          <h3>List Surveys</h3>
        </div>
        <div class="box-content"><a href="my-surveys"> <span aria-hidden="true" class="glyphicon glyphicon-th-list"></span> <br> My surveys list</a> </div>
      </div>
  </div>
</div>
';  
      break;
    case 'ubersurvey_active_survey_block':
	  global $user;
	  $ttl_actv_srvys = count_published_nodes('qform',$user->uid);
	  $output .= '<ul class="icon-nav">
					<li class="dropdown">
						<a data-toggle="dropdown" class="dropdown-toggle" href="#">
							<i class="glyphicon glyphicon-alert" data-toggle="tooltip" data-original-title="Active Surveys" href="#" rel="tooltip" data-placement="bottom"></i>
							<span class="label label-lightred">'.$ttl_actv_srvys.'</span>
						</a>
						<ul class="dropdown-menu pull-right message-ul">';
      if($ttl_actv_srvys>0) {               
	    $nids = get_published_nodes_lmtd("qform", $user->uid , 3);
		foreach ($nids as $nid) {
          $node = node_load($nid, NULL, TRUE);
		  $node_alias = drupal_get_path_alias('node/'.$node->nid);
		  $title_length = drupal_strlen($node->title);
		  if($title_length>35) {
		    $title = drupal_substr($node->title,0,35)."..";
		  }else {
		    $title = $node->title;
		  }
		  $output .= '<li><a href="/'.$node_alias.'">'.$title.'</a></li>';
		}
	    if($ttl_actv_srvys>3) {	
		  $output .= '<li>
								<a class="more-messages" href="/my-surveys?title=&status_1=1">Go to list
									<i class="glyphicon glyphicon-circle-arrow-right"></i>
								</a>
							</li>';
	     }
	  }else {
  	    $output .= '<li><a>No Active Survey</a></li>';
	  }

						$output .= '</ul>
					</li>
				</ul>';
	  break;
    case 'ubersurvey_user_submissions':
	  $output.= ubersurvey_user_submissions();
	  break;
  
  }
  return $output;
}

function count_published_nodes($type, $uid){
  $query = new EntityFieldQuery;
  $count = $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', $type)
    ->propertyCondition('status', 1) 
	->propertyCondition('uid', $uid)
    ->count()
    ->execute();
  return $count;
}

function get_published_nodes_lmtd($type, $uid , $lmt){
  $query = new EntityFieldQuery;
  $result = $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', $type)
    ->propertyCondition('status', 1) 
	->propertyCondition('uid', $uid)
    ->propertyOrderBy('created', 'DESC')
	->range(0, $lmt)
    ->execute();
  if(!empty($result['node'])) {
    $nids = array_keys($result['node']);
  }
  return $nids;
}

function ubersurvey_user_submissions() {
  global $user;
  $output = '';
  $select = db_select('qforms_submission', 's')->extend('PagerDefault');
  $select->condition('s.uid', $user->uid);
  $select->join('node', 'n', 's.nid = n.nid');
  $select->join('users', 'u', 'n.uid = u.uid');
  $select->addField('n', 'title');
  $select->addField('n', 'created');
  $select->addField('n', 'uid');
  $select->addField('u', 'name');
  $select->limit(15);
  $rows = $select->execute()->fetchAll(PDO::FETCH_ASSOC);
  if (!empty($rows)) {
    foreach ($rows as &$row) {
	  $row['created'] = format_date($row['created'], 'custom', 'm/d/Y');
      $account = new stdClass();
      $account->uid = $row['uid'];
      $account->name = $row['name'];
      $row['name'] = theme('username', array('account' => $account, 'name' => check_plain($row['name'])));
      unset($row['uid']);
    }
    $header = array(t('Survey Title'), t('Created on'), t('Author'));
    $output .= theme('table', array('header' => $header, 'rows' => $rows));
    $output .= theme('pager', array('quantity' => 3));
  }
  else {
    $output .= 'No record found.';
  }
  return $output;
}